<?php

/**
 * @file
 * Contains recurring_events_registration.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_help().
 */
function recurring_events_registration_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the recurring_events_registration module.
    case 'help.page.recurring_events_registration':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Registration for recurring events') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_base_field_info_alter().
 */
function recurring_events_registration_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'eventseries') {
    // TODO Registration fields to all be one custom field.
    $fields['registration'] = BaseFieldDefinition::create('boolean')
      ->setLabel(t('Enable Registration'))
      ->setDescription(t('Select whether to enable registration for this series.'))
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE)
      ->setRevisionable(TRUE)
      ->setCardinality(1)
      ->setDisplayOptions('form', [
        'type' => 'boolean_checkbox',
        'settings' => [
          'display_label' => TRUE,
        ],
        'weight' => 100,
      ])
      ->setDisplayOptions('view', [
        'type' => 'hidden',
      ]);

    $fields['registration_type'] = BaseFieldDefinition::create('list_string')
      ->setLabel(t('Registration Type'))
      ->setDescription(t('Select which type of registration applies to this event.'))
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE)
      ->setRevisionable(TRUE)
      ->setCardinality(1)
      ->setSetting('allowed_values', [
        'instance' => t('Individual Event Registration'),
        'series' => t('Entire Series Registration'),
      ])
      ->setDisplayOptions('form', [
        'type' => 'options_buttons',
        'settings' => [
          'allowed_values' => [
            'instance' => t('Individual Event Registration'),
            'series' => t('Entire Series Registration'),
          ],
        ],
        'weight' => 101,
      ]);

    $fields['registration_dates'] = BaseFieldDefinition::create('list_string')
      ->setLabel(t('Registration Dates'))
      ->setDescription(t('Select whether to enable open or scheduled registration'))
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE)
      ->setRevisionable(TRUE)
      ->setCardinality(1)
      ->setSetting('allowed_values', [
        'open' => t('Open Registration'),
        'scheduled' => t('Scheduled Registration'),
      ])
      ->setDisplayOptions('form', [
        'type' => 'options_buttons',
        'settings' => [
          'allowed_values' => [
            'open' => t('Open Registration'),
            'scheduled' => t('Scheduled Registration'),
          ],
        ],
        'weight' => 102,
      ]);
  }
}
